I am writing "stories" for a front end library. I am using vite, storybook, and vue3.
Your job is to create a `LoadingBar.stories.js` for the `LoadingBar.vue` component. Ensure to   create a base `const Template` which the stories can use a `bind` method from. For example:
```
const Template = (args) => ({
  components: { Foo },
  setup() { return { args }; },
  template: '<foo v-bind="args" />',
});
export const Primary = Template.bind({});
Primary.args = { primary: true };
```

Ensure slots are covered in the template.  Ensure `argTypes` provide adequate coverage for the component. Ensure the export includes `tags: ["autodocs"]. Ensure the component is imported from `@/components//common/loading/LoadingBar.vue`. 
Ensure that the following import is mentioned: `import "@/assets/styles/styles.less"`.

The following is the contents of "LoadingBar.vue":
```
<template>
  <div
    class="loading-bar-wrapper"
    :class="classes"
  />
</template>

<script>

export default
{
  name: "LoadingBar",
  props:
  {
    /** Width of the bar */
    size:
    {
      default: "medium",
      required: false,
      type: String,
    },

    /** Height of the bar */
    tall:
    {
      required: false,
      type: Boolean,
    },
  },
  computed:
  {
    /**
     * @returns {object} CSS classes for applying/customizing width and height of bar
     */
    classes ()
    {
      let classArray = []

      classArray.push(this.tall ? "loading-bar-tall" : "loading-bar-short")
      classArray.push(this.sizeClass)

      return classArray
    },

    /**
     * @returns {string} A css class for loading bar length
     */
    sizeClass ()
    {
      let prefix = "loading-bar-"

      switch (this.size)
      {
        case "small":
          return prefix + "sm"

        case "medium":
          return prefix + "md"

        case "large":
          return prefix + "lg"

        default:
          return prefix + "md"
      }
    },
  },
}

</script>

```


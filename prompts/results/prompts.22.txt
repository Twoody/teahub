I am writing "stories" for a front end library. I am using vite, storybook, and vue3.
Your job is to create a `Endorsement.stories.js` for the `Endorsement.vue` component. Ensure to   create a base `const Template` which the stories can use a `bind` method from. For example:
```
const Template = (args) => ({
  components: { Foo },
  setup() { return { args }; },
  template: '<foo v-bind="args" />',
});
export const Primary = Template.bind({});
Primary.args = { primary: true };
```

Ensure slots are covered in the template.  Ensure `argTypes` provide adequate coverage for the component. Ensure the export includes `tags: ["autodocs"]. Ensure the component is imported from `@/components//anchors/endorsements/Endorsement.vue`. 
Ensure that the following import is mentioned: `import "@/assets/styles/styles.less"`.

The following is the contents of "Endorsement.vue":
```
<template>
  <div class="endorsement-wrapper">
    <a
      v-if="href"
      class="linked"
      :href="href"
      target="_blank"
    >
      {{ formattedText }}
    </a>
    <span
      v-else
      class="not-linked"
    >
      {{ formattedText }}
    </span>

  </div>
</template>

<script>

export default {
  name: "Endorsement",
  data () 
  {
    return {}
  },
  props:
  {
    /** The fullname of the person */
    fullname: 
    {
      required: true,
      type: String,
    },

    /** A relative link to visit and learn of the person */
    href: 
    {
      default: "",
      required: false,
      type: String,
    },

    /** A title or position for the person IFF applicable */
    position: 
    {
      default: "",
      required: false,
      type: String,
    },
  },
  computed:
  {
    /** @returns {string} Full text of a person */
    formattedText ()
    {
      return `${this.formattedTitle} ${this.fullname}`
    },

    /** @returns {string} Formatted title or position to prepend to a name */
    formattedTitle ()
    {
      return this.position ? `${this.position} -` : ""
    },
  },
}
</script>
```

